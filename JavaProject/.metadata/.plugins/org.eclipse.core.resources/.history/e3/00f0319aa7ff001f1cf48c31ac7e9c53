package day0313;

import java.awt.Color;
import java.awt.Container;
import java.awt.GridLayout;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;

public class JTableEx1 extends JFrame{
	Container cp;
	JTable tb1,tb2,tb3;
	JTextArea area; //테이블의 내용을 출력할곳
	
	//생성자
	public JTableEx1(String title) {
		super(title);
		
		//위치,너비
		this.setBounds(1000, 100, 500, 600);		
		cp=this.getContentPane();
		//메인프레임 종료
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //창 색상
		cp.setBackground(new Color(245,245,245));		
		initDesign();		
		this.setVisible(true);	
		
	}
	
	public void initDesign()
	{	//2행2열의 그리드 레이아웃설정 갭은 5
		this.setLayout(new GridLayout(2,2,5,5));
		
		//1번째 테이블_행열만 지정
		tb1=new JTable(5, 4);
		this.add(new JScrollPane(tb1));//테이블 추가할 때 스크롤 생성해서 그안에 테이블을 담자
		
		//2번째 테이블 생성시 데이타 넣기
		String [] title1= {"사원명","나이","주소"};
		String [][] data1= {
				{"홍길동","22","부산시"},
				{"고길동","25","서울시"},
				{"손흥민","30","대구시"}
		};
		
		tb2=new JTable(data1, title1);		
		this.add(new JScrollPane(tb2));
		
		//3번째 테이블은 Model을 이용해서 생성(나중에 추가,삭제 가능)
		DefaultTableModel model1=new DefaultTableModel(data1, title1);
		tb3=new JTable(model1);
		this.add(new JScrollPane(tb3));
		
		//추가_tb3는 모델을 이용해서 생성했으므로 가능
		String [] addData1= {"김둘리","29","인천시"};
		model1.addRow(addData1);
		
		//이번엔 벡터로 생성후 추가
		Vector<String> addData2=new Vector<String>();
		addData2.add("이영자");
		addData2.add("40");
		addData2.add("제주시");
		
		model1.addRow(addData2);
		
		//출력공간 생성
		area=new JTextArea();
		this.add(new JScrollPane(area));
		
		//JTable , Model 메서드 확인
		int colCount=tb3.getColumnCount();
		int rowCount1=tb3.getRowCount();
		int rowCount2=model1.getRowCount();
		
		area.append("tb3의 행갯수:	 "+rowCount1+"\n");
		area.append("tb3의 행갯수:	 "+rowCount2);
		
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new JTableEx1("JTable연습 #1");
	}

}
