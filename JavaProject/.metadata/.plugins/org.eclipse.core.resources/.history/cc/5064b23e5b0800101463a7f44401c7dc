package day0324;

import java.awt.Color;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import day0319.DbConnect;

public class SwingScoreDB extends JFrame implements ActionListener{
	
	AddScore addScore=new AddScore("성적추가 폼");
	Container cp;
	DbConnect db=new DbConnect();
	DefaultTableModel model;
	JTable table;
	JButton btnAdd, btnUpdate, btnDel;
	
	
	
	//생성자
	public SwingScoreDB(String title) {
		super(title);
		
		//위치,너비
		this.setBounds(1000, 100, 500, 600);		
		cp=this.getContentPane();
		//메인프레임 종료
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//창 색상
		cp.setBackground(new Color(245,245,245));		
		initDesign();
		
		this.setVisible(true);	
	}
	
	//디자인
	public void initDesign()
	{
		
		String [] title= {"번호","이름","반","Java","Jsp","Spring","총점","평균"};
		JPanel ptop=new JPanel();
		this.add("North",ptop);
		
		model=new DefaultTableModel(title, 0);
		table=new JTable(model);
		this.add("Center", new JScrollPane(table));
		
		//테이블에 db데이타 출력
		selectTableWrite();
		
		btnAdd=new JButton("성적추가");
		btnAdd.addActionListener(this);
		ptop.add(btnAdd);
		
		btnDel=new JButton("성적삭제");
		btnDel.addActionListener(this);
		ptop.add(btnDel);
		
		btnUpdate=new JButton("성적수정");
		btnUpdate.addActionListener(this);
		ptop.add(btnUpdate);	
		
		//addscore에 있는 추가버튼에 이벤트를 추가
		
		addScore.btnAdd.addActionListener(this);
		
		
	}
	
	///////////////////////////////////테이블 출력하는 메서드
	public void selectTableWrite()
	{
		//테이블 초기화
		model.setRowCount(0);
		Connection conn=db.getConnection();
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		
		String sql="select * from stuscore order by num";
		
		try {
			pstmt=conn.prepareStatement(sql);
			rs=pstmt.executeQuery();
			
			while(rs.next())
			{
				Vector<String> data=new Vector<String>();
				data.add(rs.getString("num"));
				data.add(rs.getString("name"));
				data.add(rs.getString("ban"));
				data.add(rs.getString("java"));
				data.add(rs.getString("jsp"));
				data.add(rs.getString("spring"));
				data.add(rs.getString("total"));
				data.add(rs.getString("average"));
				
				//테이블 추가
				model.addRow(data);			
				
			}
					
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(rs, pstmt, conn);
		}
		
	}
	
	//insert메서드 추가
	public void insertScoreData()
	{
		String name=addScore.tfName.getText();
		String java=addScore.tfJava.getText();
		String jsp=addScore.tfJsp.getText();
		String spring=addScore.tfSpring.getText();
		String ban=(String)addScore.cbBan.getSelectedItem();
		
		int tot=Integer.parseInt(java)+Integer.parseInt(jsp)+Integer.parseInt(spring);
		double avg=tot/3.0;
		
		String sql="insert into stuscore values(seq_sungjuk.nextval,?,?,?,?,?,?,?)";
		
		Connection conn=db.getConnection();
		PreparedStatement pstmt=null;
		
		try {
			pstmt=conn.prepareStatement(sql);
			
			pstmt.setString(1, "name");
			pstmt.setString(2, "java");
			pstmt.setString(2, "jsp");
			pstmt.setString(2, "spring");
			pstmt.setString(2, "total");
			pstmt.setString(2, "average");
			pstmt.setString(2, "ban");
			
			pstmt.execute();			
			
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(pstmt, conn);
		}
		
		
	}
	
	//이벤트
	@Override
	public void actionPerformed(ActionEvent e) {
		// 각 버튼에 대한 이벤트
		Object ob=e.getSource();
		
		if(ob==btnAdd)
		{
			addScore.setVisible(true);
		}
		
		else if(ob==btnDel)
		{
			System.out.println("del");
		}
		
		else if(ob==btnUpdate)
		{
			System.out.println("update");
		}
		
		else if(ob==addScore.btnAdd)
		{
			insertScoreData();
		}
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new SwingScoreDB("스윙 스코어 디비");
	}

	

}
